% nvm, npm

# 进入 REPL 环境
node

# 执行脚本字符串
node -e ‘console.log(“Hello World”)’

# 运行脚本文件,可以不用加js后缀，默认就是js后缀
node <filePath>

# 查看帮忙文档
node –help

# 查找本电脑上所有的node版本
nvm list
# 查看已经安装的版本
nvm list installed
# 查看网络可以安装的版本
nvm list available
# 安装最新版本nvm
nvm install
# 切换使用指定的版本node
nvm use
# 列出所有版本
nvm ls
# 显示当前版本
nvm current

# 给不同的版本号添加别名
nvm alias
# 删除已定义的别名
nvm unalias
# 在当前版本node环境下，重新全局安装指定版本号的npm包
nvm reinstall-packages
# 打开nodejs控制
nvm on
# 关闭nodejs控制
nvm off
# 查看设置与代理
nvm proxy
# 设置或者查看setting.txt中的node_mirror，如果不设置的默认是 https://nodejs.org/dist/
nvm node_mirror <url>
# 卸载制定的版本
nvm uninstall
# 切换制定的node版本和位数
nvm use <version> <arch>
# 设置和查看root路径
nvm root <path>
# 查看当前的版本
nvm version

# 将包安装到全局环境中
npm install <packageName|gitUrl> -g

# 强制重新安装 -f 或 --force 参数
npm install <packageName> --force
# 安装指定版本
npm install –python=python2.7
# 使用指定版本
npm config set python python2.7

# 安装cnpm (国内淘宝镜像源),主要用于某些包或命令程序下载不下来的情况
npm install cnpm -g –registry=https://registry.npm.taobao.org
# 查看当前目录下已安装的node包，Node模块搜索是从代码执行的当前目录开始的，搜索结果取决于当前使用的目录中的node_modules下的内容。
npm list
# 可以目录的形式来展现当前安装的所有node包
npm list parseable=true
## 查看帮助命令
npm help
# 查看包的依赖关系
npm view <moudleName> dependencies
# 查看包的源文件地址
npm view <moduleName> repository.url
# 查看包所依赖的Node的版本
npm view <moduleName> engines
# 查看npm使用的所有文件夹
npm help folders
# 用于更改包内容后进行重建
npm rebuild <moduleName>
# 检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新
npm outdated
# 升级更新node模块
npm update <moduleName>
# 卸载node模块
npm uninstall <moudleName>
# 需要检验某个包名是否已存在
npm search <packageName>
# 会引导你创建一个package.json文件，包括名称、版本、作者这些信息等
npm init
# 查看当前包的安装路径
npm root
# 查看全局的包的安装路径
npm root -g
# 查看npm安装的版本
npm -v
##显示模块详情
npm show
# 显示express信息
npm show express
# 安装 n 模块
npm i n -g -f
# 查看n版本
n –version
